openapi: 3.0.0
info:
  version: 1.0.0
  title: Technical Test REST API
  description: REST API related to BCNC Technical Test
  contact:
    email: almudalamo@gmail.com
    name: Alejandro Muñoz Del Álamo
tags:
  - name: Products
    description: Related to products
paths:
  /products:
    post:
      operationId: CreateProduct
      description: Add a product given its brand and id and an active date
      summary: Get a specific product at the date
      tags:
        - Products
      requestBody:
        description: Updated product information
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDTO"
      responses:
        default:
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"
        "201":
          description: "Product data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDTO"
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "409":
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictResponse"
  /products/{productId}/brand/{brandId}/date/{dateId}:
    get:
      operationId: GetProduct
      description: Get a product given its brand, id and an active date
      summary: Get a specific product at the date
      tags:
        - Products
      parameters:
        - in: path
          name: productId
          schema:
            type: number
          required: true
          description: Product ID
          example: 1309
        - in: path
          name: brandId
          schema:
            type: number
          required: true
          description: Brand ID
          example: 10036
        - in: path
          name: dateId
          schema:
            type: string
          required: true
          description: Product active date
          example: "2020-06-15T16:30:00"
      responses:
        default:
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"
        "200":
          description: "Product data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductInfoDTO"
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
    put:
      operationId: UpdateProduct
      description: Update a product given its brand, id and an active date
      summary: Update a specific product at the date
      tags:
        - Products
      parameters:
        - in: path
          name: productId
          schema:
            type: number
          required: true
          description: Product ID
          example: 1309
        - in: path
          name: brandId
          schema:
            type: number
          required: true
          description: Brand ID
          example: 10036
        - in: path
          name: dateId
          schema:
            type: string
          required: true
          description: Product active date
          example: "2020-06-15 16:30:00"
      requestBody:
        description: Updated product information
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDTO"
      responses:
        default:
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"
        "200":
          description: "Product data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDTO"
        "204":
          description: "No content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDTO"
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
    delete:
      operationId: DeleteProduct
      description: Remove a product given its brand, id and an active date
      summary: Remove a specific product at the date
      tags:
        - Products
      parameters:
        - in: path
          name: productId
          schema:
            type: number
          required: true
          description: Product ID
          example: 1309
        - in: path
          name: brandId
          schema:
            type: number
          required: true
          description: Brand ID
          example: 10036
        - in: path
          name: dateId
          schema:
            type: string
          required: true
          description: Product active date
          example: "2020-06-15 16:30:00"
      responses:
        default:
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"
        "204":
          description: "No content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDTO"
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
components:
  schemas:
    InternalServerErrorResponse:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
          description: A brief title of the error.
          maxLength: 255
          example: "Error title"
        detail:
          type: string
          maxLength: 255
          description: A more detailed description of the error.
          example: "Detailed message"
        status:
          type: integer
          description: The HTTP status code represented as string.
          minimum: 100
          maximum: 700
          example: 200
    BadRequestResponse:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
          description: A brief title of the error.
          maxLength: 255
          example: "Error title"
        detail:
          type: string
          maxLength: 255
          description: A more detailed description of the error.
          example: "Detailed message"
        status:
          type: integer
          description: The HTTP status code represented as string.
          minimum: 100
          maximum: 700
          example: 200
    NotFoundResponse:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
          description: A brief title of the error.
          maxLength: 255
          example: "Error title"
        detail:
          type: string
          maxLength: 255
          description: A more detailed description of the error.
          example: "Detailed message"
        status:
          type: integer
          description: The HTTP status code represented as string.
          minimum: 100
          maximum: 700
          example: 200
    ConflictResponse:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
          description: A brief title of the error.
          maxLength: 255
          example: "Error title"
        detail:
          type: string
          maxLength: 255
          description: A more detailed description of the error.
          example: "Detailed message"
        status:
          type: integer
          description: The HTTP status code represented as string.
          minimum: 100
          maximum: 700
          example: 200
    ProductDTO:
      type: object
      additionalProperties: false
      properties:
        productId:
          type: number
          example: 35455
          minimum: 1
          maximum: 50000
        brandId:
          type: number
          example: 1
          minimum: 1
          maximum: 50000
        priceList:
          type: integer
          example: 3
          minimum: 1
          maximum: 20
        priority:
          type: integer
          example: 1
          minimum: 0
          maximum: 20
        price:
          type: number
          example: 1
          minimum: 0
          maximum: 50000
        currency:
          type: string
          description: Product currency
          maxLength: 3
          example: "EUR"
        startDate:
          type: string
          description: Product price activation date
          maxLength: 20
          example: "2020-06-14 00.00.00"
        endDate:
          type: string
          description: Product price deprecation date
          maxLength: 20
          example: "2020-12-31 23.59.59"
    ProductInfoDTO:
      type: object
      additionalProperties: false
      properties:
        productId:
          type: number
          example: 35455
          minimum: 1
          maximum: 50000
        brandId:
          type: number
          example: 1
          minimum: 1
          maximum: 50000
        priceList:
          type: integer
          example: 3
          minimum: 1
          maximum: 20
        price:
          type: number
          example: 1
          minimum: 0
          maximum: 50000
        currency:
          type: string
          description: Product currency
          maxLength: 3
          example: "EUR"
        startDate:
          type: string
          description: Product price activation date
          maxLength: 20
          example: "2020-06-14 00.00.00"
        endDate:
          type: string
          description: Product price deprecation date
          maxLength: 20
          example: "2020-12-31 23.59.59"
